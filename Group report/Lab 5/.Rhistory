Gb = sample(data1$Day_of_year, n)
data11 <- data1
data11$Day_of_year <- Gb
stat[b] <- stats(data11,1:n)
}
return(stat)
}
stat <- permutation_test(B=2000, data1)
stat0 <- stats(data1,1:nrow(data1))
re = data.frame( stat0 ,mean(stat>=stat0) )
colnames(re) <- c("test_statistic","p_value")
re
re = data.frame( stat0 ,mean(stat>=abs(stat0)) )
colnames(re) <- c("test_statistic","p_value")
re
set.seed(123456)
permutation_test <- function(B, data1){
n = dim(data1)[1]
stat = numeric(B)
for(b in 1:B){
# randoming X
Gb = sample(data1$Day_of_year, n)
data11 <- data1
data11$Day_of_year <- Gb
stat[b] <- stats(data11,1:n)
}
return(stat)
}
stat <- permutation_test(B=2000, data1)
stat0 <- stats(data1,1:nrow(data1))
re = data.frame( stat0 ,mean(stat>=abs(stat0)) )
colnames(re) <- c("test_statistic","p_value")
re
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
plot(data15)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
plot(data15)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
fun(a=0.1)
fun(a=0.1)
fun(a=0.1)
fun(a=10)
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
plot(data15)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(stat>=stat0) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
fun(a=0.1)
fun(a=0.1)
fun(a=0.1)
fun(a=0.1)
fun(a=10)
set.seed(123456)
permutation_test <- function(B, data1){
n = dim(data1)[1]
stat = numeric(B)
for(b in 1:B){
# randoming X
Gb = sample(data1$Day_of_year, n)
data11 <- data1
data11$Day_of_year <- Gb
stat[b] <- stats(data11,1:n)
}
return(stat)
}
stat <- permutation_test(B=2000, data1)
stat0 <- stats(data1,1:nrow(data1))
re = data.frame( stat0 ,mean(stat>=stat0) )
colnames(re) <- c("test_statistic","p_value")
re
set.seed(123456)
permutation_test <- function(B, data1){
n = dim(data1)[1]
stat = numeric(B)
for(b in 1:B){
# randoming X
Gb = sample(data1$Day_of_year, n)
data11 <- data1
data11$Day_of_year <- Gb
stat[b] <- stats(data11,1:n)
}
return(stat)
}
stat <- permutation_test(B=2000, data1)
stat0 <- stats(data1,1:nrow(data1))
re = data.frame( stat0 ,mean(stat>=stat0) )
colnames(re) <- c("average_statistic","p_value")
re
stat
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
colnames(re) <- c("average_statistic","p_value")
re
re = data.frame( stat0 ,mean(stat>=stat0) )
colnames(re) <- c("average_statistic","p_value")
re
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
plot(data15)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
## step (c)
for (i in seq(0.2,10,1)) {
re = fun(i)
print(re)
}
re = data.frame( stat0 ,mean(stat>=stat0) )
colnames(re) <- c("average_statistic","p_value")
re
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
colnames(re) <- c("average_statistic","p_value")
re
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
set.seed(123)
fun <- function(a){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1)
set.seed(123)
fun <- function(a, plot=FALSE){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
if(plot){
plot(data15)
}
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1, plot=TRUE)
## step (c)
for (i in seq(0.2,10,1)) {
re = fun(i)
print(re)
}
set.seed(123)
fun <- function(a, plot=FALSE){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
if(plot){
plot(data15)
}
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
fun(a=0.1, plot=TRUE)
fun(0.2)
for (i in seq(0.2,10,1)) {
re = fun(i)
print(re)
}
set.seed(123)
ce <- function(a, plot=FALSE){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
if(plot){
plot(data15)
}
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
ce(a=0.1, plot=TRUE)
ce(10,TRUE)
ce(0.3,TRUE)
## step (c)
stats <- c()
for (i in seq(0.2,10,1)) {
re = ce(i)
stats[i] <- re
}
## step (c)
a <- c()
for (i in seq(0.2,10,1)) {
re = ce(i)
a[i] <- re
}
# scatterplot
rm(list=ls())
data1 = read.csv2("lottery.csv")
plot_11 = ggplot(data = data1,aes(x = Day_of_year, y = Draft_No)) +
geom_point(aes(color = "red"))
plot_11
# loess(formula = Draft_No~Day_of_year, data = data1)
plot_11 +
# geom_smooth()` using method = 'loess' and formula 'y ~ x'
geom_smooth(method ="loess", formula = y~x, aes(color="blue")) +
scale_color_discrete(labels=c("expected response",
"scatter points")
)
# use non-parametric bootstrap
# need data = data1, statistic = loess & test stat, R = 2000
stats = function(data,vn){
datatemp<-data[vn,]
# Y=Draft_No & X=Day_of_year
# create the loess regression based on the sample data
reg = loess(Draft_No ~ Day_of_year, data = datatemp)
# the X which owns the max/min Y in original data
X_b = data$Day_of_year[which.max(data$Draft_No)]
X_a = data$Day_of_year[which.min(data$Draft_No)]
# Y_hat(X)
fit_X_b = predict(reg,newdata=X_b)
fit_X_a = predict(reg,newdata=X_a)
# the given test statistic
T_stat = (fit_X_b - fit_X_a) / (X_b-X_a)
return(T_stat)
}
#non-parametric bootstrap
set.seed(123456)
# dt=data1[order(data1$Draft_No),]
myboot = boot(data = data1,
statistic = stats,
R = 2000)
# summary
myboot
# plot distribution
# plot(myboot, index = 1)
d <- data.frame(t=myboot$t)
mean_t = mean(myboot$t,na.rm = TRUE)
ggplot(data = d, aes(x = t)) +
ggtitle("Histogram of t") +
geom_histogram(aes(y=..density..),
colour="black",
fill="white",
bins=30) +
geom_vline(aes(xintercept = mean_t, color = "red"),size=1.5)
# calculate the p-value
# null hypothesis: T>=0, hv tendancy
p_val = mean(myboot$t>=0, na.rm = TRUE)
p_val
set.seed(123456)
permutation_test <- function(B, data1){
n = dim(data1)[1]
stat = numeric(B)
for(b in 1:B){
# randoming X
Gb = sample(data1$Day_of_year, n)
data11 <- data1
data11$Day_of_year <- Gb
stat[b] <- stats(data11,1:n)
}
return(stat)
}
stat <- permutation_test(B=2000, data1)
stat0 <- stats(data1,1:nrow(data1))
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
colnames(re) <- c("average_statistic","p_value")
re
set.seed(123)
ce <- function(a, plot=FALSE){
## step (a)
n <- 366
b <- rnorm(n, mean=183, sd = 10)
X <- data1$Day_of_year
Y <- sapply(1:n,function(i){
t <- min(a*X[i]+b[i],366)
t <- max(0,t)
})
data15 <- data.frame(Day_of_year=X,Draft_No=Y)
if(plot){
plot(data15)
}
## step (b)
stat <- permutation_test(B=200, data15)
stat0 <- stats(data15,1:n)
re = data.frame( stat0 ,mean(abs(stat)>=abs(stat0)) )
options(digits = 5)
colnames(re) <- c("test_statistic","p_value")
return(re)
}
ce(a=0.1, plot=TRUE)
## step (c)
a <- c()
for (i in seq(0.2,10,1)) {
re = ce(i)
a[i] <- re
}
# result <- sapply(seq(0.2,10,0.1), fun)
# result<- data.frame(alpha=seq(0.2,10,0.1), p_value=result[2,])
# ggplot(data = result,aes(x=alpha,y=p_value))+
#   geom_line()
re
## step (c)
a <- c()
for (i in seq(0.2,10,1)) {
re = ce(i)
a[i] <- re[1]
}
# result <- sapply(seq(0.2,10,0.1), fun)
# result<- data.frame(alpha=seq(0.2,10,0.1), p_value=result[2,])
# ggplot(data = result,aes(x=alpha,y=p_value))+
#   geom_line()
re
## step (c)
a <- c()
b <- seq(0.2,10,1)
for (i in 1:length(b)) {
re = ce(i)
a[i] <- re
}
a <- c()
b <- seq(0.2,10,1)
for (i in 1:length(b)) {
re = ce(i)
print(re)
a[i] <- re[1]
}
## step (c)
a <- c()
b <- seq(0.2,10,0.1)
for (i in 1:length(b)) {
re = ce(i)
a[i] <- re[1]
}
# result <- sapply(seq(0.2,10,0.1), fun)
# result<- data.frame(alpha=seq(0.2,10,0.1), p_value=result[2,])
# ggplot(data = result,aes(x=alpha,y=p_value))+
#   geom_line()
result <- data.frame(alpha=b, statistic=a)
ggplot(data = result,aes(x=alpha,y=statistic))+
geom_line()
result
a
re
re[1]
re$test_statistic
## step (c)
a <- c()
b <- seq(0.2,10,0.1)
for (i in 1:length(b)) {
re = ce(i)
a[i] <- re$test_statistic
}
result <- data.frame(alpha=b, statistic=a)
ggplot(data = result,aes(x=alpha,y=statistic))+
geom_line()
resu;result
result
## step (c)
a <- c()
b <- seq(0.2,10,0.1)
for (i in 1:length(b)) {
re = ce(b(i))
a[i] <- re$test_statistic
}
## step (c)
b <- c()
a <- seq(0.2,10,0.1)
for (i in 1:length(a)) {
re = ce(a[i])
b[i] <- re$test_statistic
}
result <- data.frame(alpha=a, statistic=b)
ggplot(data = result,aes(x=alpha,y=statistic))+
geom_line()
ggplot(data = result,aes(x=alpha,y=statistic))+
geom_point()
ce(10,TRUE)
b[99] <- ce(10,TRUE)
b
ggplot(data = result,aes(x=alpha,y=statistic))+
geom_point()
