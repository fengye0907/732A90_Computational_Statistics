data21 = reshape2::melt(data2, id.vars="X")
ggplot(data = data21, aes(x = X,y=value,color=variable)) +
geom_line() +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21 <- ggplot(data = data21, aes(x = X,y=value,color=variable)) +
geom_line() +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
EM <- function(data2, eps, kmax=500, lda){
X <- data2$X
Y <- data2$Y
Z <- data2$Z
obs <- !is.na(Z)
n <- length(X)
m <- sum(is.na(Z))
loglik <- function(lda,ldap){
return(2*sum(log(X))-n*log(lda)-(X%*%Y)/lda-n*log(2*lda)
-(X[obs]%*%Z[obs])/(2*lda)-m*ldap/lda)
}
# initial state
k <- 0
llvalprev <- lda+10  # make some difference
llvalcurr <- lda
loglik <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,loglik))
while ((abs(llvalprev-llvalcurr)>eps) && (k<(kmax+1))){
llvalprev <- llvalcurr
# since we already know how to get argmax lda
llvalcurr <- 1/(4*n)*(2*X%*%Y+X[obs]%*%Z[obs]+2*m*llvalprev)
k<-k+1
loglik <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,loglik))
}
return(llvalcurr)
}
EM(data2, eps=0.001, lda=100)
EM <- function(data2, eps, kmax=500, lda){
X <- data2$X
Y <- data2$Y
Z <- data2$Z
obs <- !is.na(Z)
n <- length(X)
m <- sum(is.na(Z))
browser()
loglik <- function(lda,ldap){
return(2*sum(log(X))-n*log(lda)-(X%*%Y)/lda-n*log(2*lda)
-(X[obs]%*%Z[obs])/(2*lda)-m*ldap/lda)
}
# initial state
k <- 0
llvalprev <- lda+10  # make some difference
llvalcurr <- lda
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
while ((abs(llvalprev-llvalcurr)>eps) && (k<(kmax+1))){
llvalprev <- llvalcurr
# since we already know how to get argmax lda
llvalcurr <- 1/(4*n)*(2*X%*%Y+X[obs]%*%Z[obs]+2*m*llvalprev)
k<-k+1
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
}
return(llvalcurr)
}
EM(data2, eps=0.001, lda=100)
EM <- function(data2, eps, kmax=500, lda){
X <- data2$X
Y <- data2$Y
Z <- data2$Z
obs <- !is.na(Z)
n <- length(X)
m <- sum(is.na(Z))
# browser()
loglik <- function(lda,ldap){
return(2*sum(log(X))-n*log(lda)-(X%*%Y)/lda-n*log(2*lda)
-(X[obs]%*%Z[obs])/(2*lda)-m*ldap/lda)
}
# initial state
k <- 0
llvalprev <- lda+10  # make some difference
llvalcurr <- lda
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
while ((abs(llvalprev-llvalcurr)>eps) && (k<(kmax+1))){
llvalprev <- llvalcurr
# since we already know how to get argmax lda
llvalcurr <- 1/(4*n)*(2*X%*%Y+X[obs]%*%Z[obs]+2*m*llvalprev)
k<-k+1
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
}
return(llvalcurr)
}
EM(data2, eps=0.001, lda=100)
EM <- function(data2, eps, kmax=500, lda){
X <- data2$X
Y <- data2$Y
Z <- data2$Z
obs <- !is.na(Z)
n <- length(X)
m <- sum(is.na(Z))
# browser()
loglik <- function(lda,ldap){
return(2*sum(log(X))-n*log(lda)-(X%*%Y)/lda-n*log(2*lda)
-(X[obs]%*%Z[obs])/(2*lda)-m*ldap/lda)
}
# initial state
k <- 0
llvalprev <- lda*10+10  # make some difference
llvalcurr <- lda
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
while ((abs(llvalprev-llvalcurr)>eps) && (k<(kmax+1))){
llvalprev <- llvalcurr
# since we already know how to get argmax lda
llvalcurr <- 1/(4*n)*(2*X%*%Y+X[obs]%*%Z[obs]+2*m*llvalprev)
k<-k+1
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
}
return(llvalcurr)
}
EM(data2, eps=0.001, lda=100)
lda_opt
lda_opt <- EM(data2, eps=0.001, lda=100)
X <- data2$X
EY <- lda_opt/X
EZ <- 2*lda_opt/X
EY <- lda_opt/X
X
lda_opt/X
EY <- X*(1/lda_opt)
EY <- c(lda_opt)/X
EY
EZ <- C(2*lda_opt)/X
data24 <- cbind(data2,data.frame(EY=EY,EZ=EZ))
ggplot(data24)+
geom_line(aes(x=X,Y=Y))+
geom_line(aes(x=X,y=Z))+
geom_line(aes(x=X,y=EY))+
geom_line(aes(x=X,y=EZ))
ggplot(data24)+
geom_line(aes(x=X,y=Y))+
geom_line(aes(x=X,y=Z))+
geom_line(aes(x=X,y=EY))+
geom_line(aes(x=X,y=EZ))
plot21 <- ggplot(data = data2, aes(x = X)) +
geom_line(aes(y=Y),color="Red") +
geom_line(aes(y=Z),color="Blue") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2, aes(x = X)) +
geom_line(aes(y=Y,color="Red"),color="Red") +
geom_line(aes(y=Z),color="Blue") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color="Red") +
geom_line(aes(x = X, y=Z),color="Blue") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "#FFC312", "Z" = "#0652DD")
col
col[1]
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y, color = col[1])) +
geom_line(aes(x = X, y=Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
data24 <- cbind(data2,data.frame(EY=EY,EZ=EZ))
plot21 <- ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
geom_line(aes(x = X, y=EY, color=EY),color=col[1]) +
geom_line(aes(x = X, y=EZ, color=EZ),color=col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
geom_line(aes(x = X, y=EY, color=EY),color=col[1]) +
geom_line(aes(x = X, y=EZ, color=EZ),color=col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
geom_line(aes(x = X, y=EY, color=EY),color=col[1],size=1) +
geom_line(aes(x = X, y=EZ, color=EZ),color=col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
geom_line(aes(x = X, y=EY, color=EY),color=col[1],linetype="dashed") +
geom_line(aes(x = X, y=EZ, color=EZ),color=col[2],linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
X <- data2$X
EY <- c(lda_opt)/X
EZ <- 2*EY
data24 <- cbind(data2,data.frame(EY=EY,EZ=EZ))
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
geom_line(aes(x = X, y=EY, color=EY),color=col[1],linetype="dashed") +
geom_line(aes(x = X, y=EZ, color=EZ),color=col[2],linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
# Z & Y versus X
col = c("Y" = "#FFC312", "Z" = "#0652DD")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y, color=Y),color=col[1]) +
geom_line(aes(x = X, y=Z, color=Z),color=col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "#FFC312", "Z" = "#0652DD")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y, color=Y)) +
geom_line(aes(x = X, y=Z, color=Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# clean the environment
rm(list=ls())
# load the data
data2 = read.csv("physical1.csv")
# Z & Y versus X
col = c("Y" = "#FFC312", "Z" = "#0652DD")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y, color=Y)) +
geom_line(aes(x = X, y=Z, color=Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y)) +
geom_line(aes(x = X, y=Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "##00BA38", "Z" = "#B79F00")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
col = c("Y" = "#F8766D", "Z" = "#B79F00")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
col = c("Y" = "#F8766D", "Z" = "#00BA38")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#F564E3")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#B79F00")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#619CFF")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete("")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
# geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y),color = col[1]) +
geom_line(aes(x = X, y=Z),color =col[2]) +
# ggtitle("Z & Y versus X") +
# ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
# geom_line(aes(x = X, y=Y),color = col[1]) +
# geom_line(aes(x = X, y=Z),color =col[2]) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = col[1])) +
geom_line(aes(x = X, y=Z,color =col[2])) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = Y)) +
geom_line(aes(x = X, y=Z,color =Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = Y)) +
geom_line(aes(x = X, y=Z,color =Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("z","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = Y)) +
geom_line(aes(x = X, y=Z,color =Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = "Red")) +
geom_line(aes(x = X, y=Z,color = "Blue")) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
# clean the environment
rm(list=ls())
# load the data
data2 = read.csv("physical1.csv")
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#619CFF")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = "Red")) +
geom_line(aes(x = X, y=Z,color = "Blue")) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","z"))
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#619CFF")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y)) +
geom_line(aes(x = X, y=Z)) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z"))
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#619CFF")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = col[1])) +
geom_line(aes(x = X, y=Z,color = "Blue")) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z"))
plot21
# Z & Y versus X
col = c("Y" = "#F8766D", "Z" = "#619CFF")
plot21 <- ggplot(data = data2) +
geom_line(aes(x = X, y=Y,color = "Red")) +
geom_line(aes(x = X, y=Z,color = "Blue")) +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z"))
plot21
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y)) +
geom_line(aes(x = X, y=Z, color=Z)) +
geom_line(aes(x = X, y=EY, color=EY),linetype="dashed") +
geom_line(aes(x = X, y=EZ, color=EZ),linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z","EY","EZ"))
EM <- function(data2, eps, kmax=500, lda){
X <- data2$X
Y <- data2$Y
Z <- data2$Z
obs <- !is.na(Z)
n <- length(X)
m <- sum(is.na(Z))
# browser()
loglik <- function(lda,ldap){
return(2*sum(log(X))-n*log(lda)-(X%*%Y)/lda-n*log(2*lda)
-(X[obs]%*%Z[obs])/(2*lda)-m*ldap/lda)
}
# initial state
k <- 0
llvalprev <- lda*10+10  # make some difference
llvalcurr <- lda
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
while ((abs(llvalprev-llvalcurr)>eps) && (k<(kmax+1))){
llvalprev <- llvalcurr
# since we already know how to get argmax lda
llvalcurr <- 1/(4*n)*(2*X%*%Y+X[obs]%*%Z[obs]+2*m*llvalprev)
k<-k+1
llk <- loglik(llvalcurr,llvalprev)
print(c(k, llvalcurr,llk))
}
return(llvalcurr)
}
lda_opt <- EM(data2, eps=0.001, lda=100)
X <- data2$X
EY <- c(lda_opt)/X
EZ <- 2*EY
data24 <- cbind(data2,data.frame(EY=EY,EZ=EZ))
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color=Y)) +
geom_line(aes(x = X, y=Z, color=Z)) +
geom_line(aes(x = X, y=EY, color=EY),linetype="dashed") +
geom_line(aes(x = X, y=EZ, color=EZ),linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z","EY","EZ"))
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color="")) +
geom_line(aes(x = X, y=Z, color="")) +
geom_line(aes(x = X, y=EY, color=""),linetype="dashed") +
geom_line(aes(x = X, y=EZ, color=""),linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z","EY","EZ"))
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color="1")) +
geom_line(aes(x = X, y=Z, color="2")) +
geom_line(aes(x = X, y=EY, color="3"),linetype="dashed") +
geom_line(aes(x = X, y=EZ, color="4"),linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z","EY","EZ"))
ggplot(data = data24) +
geom_line(aes(x = X, y=Y, color="1")) +
geom_line(aes(x = X, y=Z, color="2")) +
geom_line(aes(x = X, y=EY, color="1"),linetype="dashed") +
geom_line(aes(x = X, y=EZ, color="2"),linetype="dashed") +
ggtitle("Z & Y versus X") +
ylab("Z & Y")+
scale_color_discrete(labels=c("Y","Z","EY","EZ"))
